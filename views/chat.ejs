<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>MindfulConnect</title>
<<<<<<< HEAD
        <style>
            body {
                min-height: 100vh;
                overflow-y: auto;
                padding-bottom: 2rem;
                background-color: var(--bs-body-bg);
            }

            .container {
                max-width: 1200px;
                margin: 0 auto;
                padding: 0 1rem;
            }

            .features {
                padding: 2rem 0;
            }

            .community-card {
                background-color: var(--bs-card-bg);
                border: 1px solid var(--bs-border-color);
                border-radius: 1rem;
                transition: all 0.3s ease;
                color: var(--bs-body-color);
                margin-bottom: 2rem;
                box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            }

            .community-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            }

            .community-card .card-body {
                padding: 2rem;
            }

            .chat-box {
                height: 60vh;
                min-height: 400px;
                max-height: 600px;
                overflow-y: auto;
                margin-bottom: 1rem;
                padding: 1rem;
                background-color: var(--bs-card-bg);
                border: 1px solid var(--bs-border-color);
                border-radius: 0.5rem;
                scroll-behavior: smooth;
            }

            .message {
                margin-bottom: 1rem;
                max-width: 80%;
                word-wrap: break-word;
            }

            .message.user {
                margin-left: auto;
            }

            .message.bot {
                margin-right: auto;
            }

            .message-header {
                display: flex;
                align-items: center;
                margin-bottom: 0.5rem;
                font-size: 0.9rem;
            }

            .message-header strong {
                color: var(--bs-primary);
            }

            .message-content {
                padding: 0.75rem 1rem;
                border-radius: 1rem;
                background-color: var(--bs-primary);
                color: white;
                font-size: 1rem;
                line-height: 1.5;
            }

            .message.user .message-content {
                background-color: var(--bs-primary);
                border-top-right-radius: 0;
            }

            .message.bot .message-content {
                background-color: var(--bs-secondary);
                border-top-left-radius: 0;
            }

            .intro-message {
                text-align: center;
                padding: 2rem;
                color: var(--bs-body-color);
            }

            .intro-message i {
                font-size: 3rem;
                color: var(--bs-primary);
                margin-bottom: 1rem;
            }

            .intro-message h3 {
                color: var(--bs-primary);
                margin-bottom: 1rem;
            }

            .chat-input {
                margin-top: 1rem;
            }

            .chat-input .input-group {
                background-color: var(--bs-card-bg);
                border: 1px solid var(--bs-border-color);
                border-radius: 0.5rem;
                overflow: hidden;
                transition: all 0.3s ease;
            }

            .chat-input .input-group:focus-within {
                border-color: var(--bs-primary);
                box-shadow: 0 0 0 0.2rem rgba(var(--bs-primary-rgb), 0.25);
            }

            .chat-input input {
                border: none;
                padding: 0.75rem 1rem;
                background-color: transparent;
                color: var(--bs-body-color);
            }

            .chat-input input:focus {
                box-shadow: none;
                background-color: transparent;
            }

            .chat-input input::placeholder {
                color: var(--bs-gray-500);
            }

            .chat-input button {
                padding: 0.75rem 1.25rem;
                transition: all 0.3s ease;
            }

            .chat-input button:hover {
                transform: translateY(-2px);
            }

            #loading {
                display: none;
            }

            .error-msg {
                background-color: var(--bs-danger);
                color: white;
                padding: 0.75rem 1rem;
                border-radius: 0.5rem;
                margin-top: 1rem;
                text-align: center;
                animation: fadeIn 0.3s ease;
            }

            @keyframes fadeIn {
                from { opacity: 0; transform: translateY(-10px); }
                to { opacity: 1; transform: translateY(0); }
            }

            #backToTop {
                position: fixed;
                bottom: 20px;
                right: 20px;
                width: 40px;
                height: 40px;
                background-color: var(--bs-primary);
                color: var(--bs-light);
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                cursor: pointer;
                opacity: 0;
                transition: all 0.3s ease;
                z-index: 1000;
                border: none;
                padding: 0;
                font-size: 1.2rem;
                box-shadow: 0 2px 5px rgba(0,0,0,0.2);
            }

            #backToTop.visible {
                opacity: 1;
            }

            #backToTop:hover {
                background-color: var(--bs-primary-dark);
                transform: translateY(-3px);
                box-shadow: 0 4px 8px rgba(0,0,0,0.3);
            }

            /* Custom scrollbar */
            .chat-box::-webkit-scrollbar {
                width: 8px;
            }

            .chat-box::-webkit-scrollbar-track {
                background: var(--bs-card-bg);
                border-radius: 4px;
            }

            .chat-box::-webkit-scrollbar-thumb {
                background: var(--bs-primary);
                border-radius: 4px;
            }

            .chat-box::-webkit-scrollbar-thumb:hover {
                background: var(--bs-primary-dark);
            }
        </style>
=======
        <link rel="stylesheet" href="/css/chat.css" />
>>>>>>> 20cf8e16e838a426086f25676c1422f7f6fc9d5a
    </head>
    <body>
        <%- include('partials/header-logged-in') %>

        <!-- Hero Section -->
        <section class="hero">
            <div class="container">
                <div class="row justify-content-center">
                    <div class="col-lg-10 text-center">
                        <h1 class="display-3">AI Chat <span class="text-gradient">Support</span></h1>
                        <p class="subtitle mb-4">Start your conversation for peace of mind.</p>
                    </div>
                </div>
            </div>
        </section>

        <!-- Chat Section -->
        <section class="features">
            <div class="container">
                <div class="row justify-content-center">
                    <div class="col-lg-8">
                        <div class="community-card">
                            <div class="card-body">
                                <div class="chat-box" id="chatBox">
                                    <% if (messages && messages.length) { %>
                                        <% messages.forEach(function(msg) { %>
                                            <% if (msg.sender === 'user') { %>
                                                <div class="message user">
                                                    <div class="message-header">
                                                        <strong>You</strong>
                                                        <small class="text-muted ms-2"><%= new Date(msg.timestamp).toLocaleTimeString() %></small>
                                                    </div>
                                                    <div class="message-content">
                                                        <%= msg.content %>
                                                    </div>
                                                </div>
                                            <% } else if (msg.sender === 'bot') { %>
                                                <div class="message bot">
                                                    <div class="message-header">
                                                        <strong>MindfulBot</strong>
                                                        <small class="text-muted ms-2"><%= new Date(msg.timestamp).toLocaleTimeString() %></small>
                                                    </div>
                                                    <div class="message-content">
                                                        <%= msg.content %>
                                                    </div>
                                                </div>
                                            <% } %>
                                        <% }); %>
                                    <% } else { %>
                                        <div class="intro-message">
                                            <i class="fas fa-robot"></i>
                                            <h3>Welcome to MindfulBot</h3>
                                            <p>I'm here to support you on your mental health journey. How can I help you today?</p>
                                        </div>
                                    <% } %>

                                    <div id="loading" class="message bot">
                                        <div class="message-header">
                                            <strong>MindfulBot</strong>
                                        </div>
                                        <div class="message-content">
                                            Thinking...
                                        </div>
                                    </div>
                                </div>

                                <form action="/chat" method="POST" class="chat-input" id="chatForm">
                                    <div class="input-group">
                                        <input type="text" name="userInput" class="form-control" placeholder="Type your message..." required autocomplete="off">
                                        <button type="button" id="clearBtn" class="btn btn-outline-secondary" title="Clear conversation">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                        <button type="submit" class="btn btn-primary" id="sendBtn">
                                            <i class="fas fa-paper-plane"></i>
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <%- include('partials/footer') %>

        <script>
            document.addEventListener('DOMContentLoaded', function() {
                const chatBox = document.getElementById('chatBox');
                const chatForm = document.getElementById('chatForm');
                const userInput = chatForm.querySelector('input[name="userInput"]');
                const sendBtn = document.getElementById('sendBtn');
                const clearBtn = document.getElementById('clearBtn');
                const loading = document.getElementById('loading');
                const backToTop = document.getElementById('backToTop');

                // Focus input on load
                userInput.focus();

                // Handle form submission
                chatForm.addEventListener('submit', async function(e) {
                    e.preventDefault();
                    
                    const message = userInput.value.trim();
                    if (!message) return;

                    // Disable input and button while sending
                    userInput.disabled = true;
                    sendBtn.disabled = true;

                    // Show loading indicator
                    loading.style.display = 'block';
                    chatBox.scrollTop = chatBox.scrollHeight;

                    try {
                        const response = await fetch('/chat', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ userInput: message })
                        });

                        if (!response.ok) {
                            throw new Error('Failed to send message');
                        }

                        // Clear input
                        userInput.value = '';
                        
                        // Reload page to show new messages
                        window.location.reload();
                    } catch (error) {
                        console.error('Error:', error);
                        const errorMsg = document.createElement('div');
                        errorMsg.className = 'error-msg';
                        errorMsg.textContent = 'Failed to send message. Please try again.';
                        chatForm.parentNode.insertBefore(errorMsg, chatForm);
                        setTimeout(() => errorMsg.remove(), 5000);
                    } finally {
                        // Re-enable input and button
                        userInput.disabled = false;
                        sendBtn.disabled = false;
                        loading.style.display = 'none';
                        userInput.focus();
                    }
                });

                // Clear chat history
                clearBtn.addEventListener('click', async function() {
                    if (!confirm('Are you sure you want to clear the conversation?')) return;

                    try {
                        const response = await fetch('/chat/clear', {
                            method: 'POST'
                        });

                        if (!response.ok) {
                            throw new Error('Failed to clear chat');
                        }

                        window.location.reload();
                    } catch (error) {
                        console.error('Error:', error);
                        const errorMsg = document.createElement('div');
                        errorMsg.className = 'error-msg';
                        errorMsg.textContent = 'Failed to clear chat. Please try again.';
                        chatForm.parentNode.insertBefore(errorMsg, chatForm);
                        setTimeout(() => errorMsg.remove(), 5000);
                    }
                });

                // Back to top button
                window.addEventListener('scroll', () => {
                    if (window.pageYOffset > 300) {
                        backToTop.classList.add('visible');
                    } else {
                        backToTop.classList.remove('visible');
                    }
                });
                
                backToTop.addEventListener('click', () => {
                    window.scrollTo({
                        top: 0,
                        behavior: 'smooth'
                    });
                });

                // Auto-scroll to bottom when new messages arrive
                const observer = new MutationObserver(() => {
                    chatBox.scrollTop = chatBox.scrollHeight;
                });

                observer.observe(chatBox, {
                    childList: true,
                    subtree: true
                });
            });
        </script>
    </body>
</html>
